NOTES_B6_final$`Start Drill date`<-as.character(NOTES_B6_final$`Start Drill date`)
NOTES_B6_final$`End Drill date`<-as.character(NOTES_B6_final$`End Drill date`)
NOTES_B6_final$`Date of Weighing`<-as.character(NOTES_B6_final$`Date of Weighing`)
###
NOTES_B7<- read_excel('J:\\PM\\ORG-GC\\A2 - Non-HHEAR Projects\\Tooth Powder projects\\Tooth powder\\Drexel\\Drexel Batch 7\\DREXEL_B7 In progress PR 7_18_23.xlsx',sheet = 'SAMPLE_LIST')
colnames(NOTES_B7)[colnames(NOTES_B7) == "Sample"] ="Lab sample ID"
NOTES_B7<-NOTES_B7 %>%
select('SAMPLE ID','Date', 'Weighing Date...15','Tooth powder weight')
colnames(NOTES_B7)[colnames(NOTES_B7) == "Sample ID"] ="Lab sample ID"
colnames(NOTES_B7)[colnames(NOTES_B7) == "Start Date"] ="Start Drill date"
NOTES_B7 <- cbind(NOTES_B7, "End Date"=NA)
NOTES_B7<- NOTES_B7[!duplicated(NOTES_B7$`Lab sample ID`), ]
NOTES_B7_runlist<- read_excel('J:\\PM\\ORG-GC\\A2 - Non-HHEAR Projects\\Tooth Powder projects\\Tooth powder\\Drexel\\Drexel Batch 7\\DREXEL_B7 In progress PR 7_18_23.xlsx',sheet = 'Runlist')
colnames(NOTES_B7_runlist)[colnames(NOTES_B7_runlist) == "Sample ID"] ="Lab sample ID"
NOTES_B7_runlist<-NOTES_B7_runlist %>%
select('Lab sample ID','Notes')
NOTES_B7_runlist<- NOTES_B7_runlist[!duplicated(NOTES_B7_runlist$`Lab sample ID`), ]
####
notes_b1_to_b6<-rbind(Julia_notes, notes_b3,notes_b4,NOTES_B5_final,NOTES_B6_final)
signif(notes_b1_to_b6$`Tooth Powder`, digits = 4)
write.csv(notes_b1_to_b6, "H:\\nguyet53\\R\\Drexel R\\Drexel_notes_b1_to_b6.csv", row.names=TRUE)
NOTES_Blessing<- read_excel('C:\\Users\\nguyet53\\Downloads\\Drexel_Samples_with weights_BA0503231.xlsx',sheet = 'All samples with mass_notes')
colnames(NOTES_Blessing)[colnames(NOTES_Blessing) == "Sample"] ="Lab sample ID"
colnames(NOTES_Blessing)[colnames(NOTES_Blessing) == "Note"] ="Notes"
colnames(NOTES_Blessing)[colnames(NOTES_Blessing) == "Tooth Powder Weight (mg)"] ="Tooth Powder"
NOTES_Blessing$`Tooth Powder`<-as.numeric(NOTES_Blessing$`Tooth Powder`)
signif(NOTES_Blessing$`Tooth Powder`, digits = 4)
missing<-notes_b1_to_b6[!notes_b1_to_b6$`Tooth Powder`%in%NOTES_Blessing$`Tooth Powder`,]
write.csv(missing, "H:\\nguyet53\\R\\Drexel R\\Drexel_notes_b3_to_b6_contaminated.csv", row.names=TRUE)
mdf<-notes_b1_to_b6 %>% left_join(NOTES_Blessing %>% select("Lab sample ID", "Tooth Powder", "Stage"), by ="Tooth Powder" )
notes_b1_to_b6<-anti_join(notes_b1_to_b6, missing, by=c("Tooth Powder"))
write.csv(notes_b1_to_b6, "H:\\nguyet53\\R\\Drexel R\\Drexel_notes_b3_to_b6_only.csv", row.names=TRUE)
all_notes_confirmed<- read_excel('H:\\nguyet53\\R\\Drexel R\\Drexel_all_notes_confirmed_2024.xlsx')
all_notes_confirmed_2T<-all_notes_confirmed %>%
filter(if_any(Fraction, ~ str_detect(., "2T")))
write.csv(all_notes_confirmed_2T, "H:\\nguyet53\\R\\Drexel R\\Drexel_notes_2T.csv", row.names=TRUE)
all_notes_confirmed_3T<-all_notes_confirmed %>%
filter(if_any(Fraction, ~ str_detect(., "3T")))
write.csv(all_notes_confirmed_3T, "H:\\nguyet53\\R\\Drexel R\\Drexel_notes_3T.csv", row.names=TRUE)
all_notes_confirmed_Post<-all_notes_confirmed %>%
filter(if_any(Fraction, ~ str_detect(., "Post")))
all_notes_confirmed_POST<-all_notes_confirmed %>%
filter(if_any(Fraction, ~ str_detect(., "POSTNATAL")))
all_notes_confirmed_Post<-rbind(all_notes_confirmed_Post,all_notes_confirmed_POST)
write.csv(all_notes_confirmed_Post, "H:\\nguyet53\\R\\Drexel R\\Drexel_notes_Post.csv", row.names=TRUE)
all_notes_confirmed_Pre<-all_notes_confirmed %>%
filter(if_any(Fraction, ~ str_detect(., "Pre")))
write.csv(all_notes_confirmed_Pre, "H:\\nguyet53\\R\\Drexel R\\Drexel_notes_Pre.csv", row.names=TRUE)
all_notes_confirmed_blank<-all_notes_confirmed %>%
filter(if_any(Fraction, ~ str_detect(., "Blank")))
all_notes_confirmed_NA<-all_notes_confirmed[is.na(all_notes_confirmed$Fraction), ]
all_notes_confirmed_blank<-rbind(all_notes_confirmed_blank,all_notes_confirmed_NA)
all_notes_confirmed$`Tooth Powder`<-as.numeric(all_notes_confirmed$`Tooth Powder`)
signif(all_notes_confirmed$`Tooth Powder`, digits = 4)
write.csv(all_notes_confirmed_blank, "H:\\nguyet53\\R\\Drexel R\\Drexel_notes_blank.csv", row.names=TRUE)
Combined_extractionBatches_Drexel<- read_excel('H:\\nguyet53\\R\\Drexel R\\Combined_extractionBatches_Drexel.xlsx',)
all_notes_confirmed<- read_excel('H:\\nguyet53\\R\\Drexel R\\Drexel_all_notes_confirmed_2024.xlsx')
colnames(Combined_extractionBatches_Drexel)[colnames(Combined_extractionBatches_Drexel) == "Tooth Powder Weight (mg)"] ="Tooth Powder"
colnames(Combined_extractionBatches_Drexel)[colnames(Combined_extractionBatches_Drexel) == "Stage"] ="Fraction"
Combined_extractionBatches_Drexel$`Tooth Powder`<-as.numeric(Combined_extractionBatches_Drexel$`Tooth Powder`)
signif(Combined_extractionBatches_Drexel$`Tooth Powder`, digits = 5)
all_notes_confirmed$`Tooth Powder`<-as.numeric(all_notes_confirmed$`Tooth Powder`)
setDT(all_notes_confirmed)[, paste0("Lab sample ID", 1:2) := tstrsplit(`Lab sample ID`, "_")]
colnames(all_notes_confirmed)[colnames(all_notes_confirmed) == "Lab sample ID"] ="Lab sample ID - not normalized"
colnames(all_notes_confirmed)[colnames(all_notes_confirmed) == "Lab sample ID1"] ="Lab sample ID"
df2 <- merge(y=all_notes_confirmed,x=Combined_extractionBatches_Drexel,
by=c('Lab sample ID','Tooth Powder'), all.y=FALSE, all.x = TRUE)
df2<-df2[!duplicated(df2$'Extraction Label'), ]
df2<-df2[order(df2$`Extraction Batch`, decreasing = TRUE),]
df2 <- df2 %>%
group_by(`Extraction Batch`) %>%
mutate(`Number of samples (n) in the batch` = n()) %>%
ungroup()
na_rows <- df2[is.na(df2$'#'), ]
write.csv(df2, "H:\\nguyet53\\R\\Drexel R\\Combined_extractionBatches_Drexel_a.csv", row.names=TRUE)
write.csv(na_rows, "H:\\nguyet53\\R\\Drexel R\\Combined_extractionBatches_Drexel_na.csv", row.names=TRUE)
all_notes_confirmed %>%
kbl(
caption = "<center><span style='font-size:30px'>JH Drexel samples - raw notes</span></center>") %>%
kable_styling( stripe_color = "gray!6",
bootstrap_options = c("striped", "hover")) %>%
scroll_box(width = "700px", height = "500px")
OCPPBDE_QC<- read_excel('H:\\nguyet53\\R\\Drexel R\\Drexel PBDE OCP_B1-13_101123.xlsx')
names(OCPPBDE_QC)[names(OCPPBDE_QC) == 'Name'] <- 'Extraction Label'
OCPPBDE<-OCPPBDE_QC[ , !names(OCPPBDE_QC) %in% c("...1","...2","Data File","Type","Level")]
OCPPBDE_QC<-OCPPBDE_QC[ , !names(OCPPBDE_QC) %in% c("...1","...2","Extraction File","Level")]
OCPPBDE_QC_Outliers<-OCPPBDE_QC %>%  filter(`Data File`=='DrB9_SpTgtP042.D' |`Data File`=='DrB11_SpTgtP074.D' | `Data File`=='DrB12_SpTgtP045.D'| `Data File`=='DrB13_SpTgtP046.D')
OCPPBDE_QC<-OCPPBDE_QC[-(which(OCPPBDE_QC$`Data File` %in% "DrB9_SpTgtP042.D" |OCPPBDE_QC$`Data File`=="DrB11_SpTgtP074.D" | OCPPBDE_QC$`Data File`=="DrB12_SpTgtP045.D"| OCPPBDE_QC$`Data File`=="DrB13_SpTgtP046.D")),]
PCB_QC<- read_excel('H:\\nguyet53\\R\\Drexel R\\Drexel PCB_B1-13_101123.xlsx')
colnames(PCB_QC)[3]="Extraction Label"
PCB<-PCB_QC[,-c(1:2,4:7)]
PCB_QC<-PCB_QC[,-c(1:3,6:7)]
#Create OCP and PBDE names categories
OCP_colnames<- c("HCB Results","b-HCH Results","Oxychlordane Results","trans-Nonachlor Results","pp-DDE-2 Results", "pp-DDT Results")
PBDE_colnames<- c("BDE-28 Results', 'pp-DDE Results','pp-DDT-2 Results','BDE-47 Results','BDE-100 Results','BDE-99 Results','BDE-153 Results")
PCB_colnames<- c('PCB-118  Results', 'PCB-153 Results','PCB-138 Results','PCB-156 Results', 'PCB-157 Results', 'PCB-180 Results', 'PCB-170 Results')
#Import Lists with weights
all_weight <- import_list('H:\\nguyet53\\R\\Drexel R\\Copy of Drexel extraction_Batches_BA.xlsx', setclass = "tbl", rbind = TRUE)
all_weight<-all_weight %>%
select("Lab sample ID","Stage","Extraction Label", "Tooth Powder Weight (mg)","Stage")
all_weight<-all_weight %>%
filter_all(all_vars(.!='QC'))
all_weight<-all_weight %>%
filter_all(all_vars(.!='Blank'))
#Julia File: ECHO Drexel Batch 1 and 2 Blank Weights JH
NOTES_blank_weights<- read_excel('J:\\PM\\ORG-GC\\A2 - Non-HHEAR Projects\\Tooth Powder Projects\\Tooth powder\\Drexel\\Drexel 1and 2 JH\\ECHO Drexel Batch 1 and 2 Blank Weights JH.xlsx')
NOTES_blank_weights<-NOTES_blank_weights %>%
select('...4','...23')
colnames(NOTES_blank_weights)[1]="Lab sample ID"
df2 %>%
mutate('Total # samples' = n()) %>%
select('Lab sample ID','Tooth Powder','Fraction.x','Drill Round #','Extraction Batch','Extraction Label','Extraction Date','Cleanup date','#','Number of samples (n) in the batch','Total # samples') %>%
kbl(
caption = "<center><span style='font-size:30px'>Drexel: Batches 1-63</span></center>") %>%
kable_styling( stripe_color = "gray!6",
bootstrap_options = c("striped", "hover")) %>%
scroll_box(width = "700px", height = "500px")
all_OCPPBDE<-merge(OCPPBDE,all_weight,by='Extraction Label')
all_OCPPBDE <- all_OCPPBDE[, c(1,15,16, 17, 2, 3,4,5,6,7,8,9,10,11,12,13,14)]
all_PCB<-merge(PCB,all_weight,by='Extraction Label')
all_PCB <- all_PCB[, c(1,9,10, 11, 2, 3,4,5,6,7,8)]
notes_OCPPBDE<-merge(all_OCPPBDE,all_notes_confirmed,by='Lab sample ID')
notes_OCPPBDE<-notes_OCPPBDE[!duplicated(notes_OCPPBDE$`Extraction Label`),]
notes_PCB<-merge(all_PCB,all_notes_confirmed,by='Lab sample ID')
notes_PCB<-notes_PCB[!duplicated(notes_PCB$`Extraction Label`), ]
notes_PCB_venn<-notes_PCB[!duplicated(notes_PCB$`Extraction Label`), ]
notes_OCPPBDE <- notes_OCPPBDE %>% replace(is.na(.), 0)
notes_OCPPBDE_venn <- notes_OCPPBDE %>% replace(is.na(.), 0)
#OCP
cont_OCP<-data.frame(notes_OCPPBDE[grep("Contaminated", notes_OCPPBDE$Stage), ])
hardware_OCP<-data.frame(notes_OCPPBDE[grep("- Hardware Malfunction", notes_OCPPBDE$Stage), ])
two_OCP<-data.frame(notes_OCPPBDE[grep("-2", notes_OCPPBDE$Stage), ])
one_OCP<-data.frame(notes_OCPPBDE[grep("-1", notes_OCPPBDE$Stage), ])
two_1_OCP<-data.frame(notes_OCPPBDE[grep("_2", notes_OCPPBDE$Stage), ])
one_1_OCP<-data.frame(notes_OCPPBDE[grep("_1", notes_OCPPBDE$Stage), ])
Pre_OCP<-data.frame(notes_OCPPBDE[grep("Pre Natal", notes_OCPPBDE$Stage), ])
OCP_removed<-rbind(cont_OCP,hardware_OCP,two_OCP,one_OCP,two_1_OCP, one_1_OCP, Pre_OCP)
OCP_removed<-OCP_removed %>% select("Lab.sample.ID", "Extraction.Label","Stage", "Notes")
OCP_removed %>%
mutate('Total # samples ' = n()) %>%
kbl(
caption = "<center><span style='font-size:30px'>Modified or removed samples</span></center>"
) %>%
kable_styling( stripe_color = "gray!6",
bootstrap_options = c("striped", "hover")) %>%
scroll_box(width = "700px", height = "500px")
OCPPBDE_QC_Outliers %>%
mutate('Total # samples ' = n()) %>%
kbl(
caption = "<center><span style='font-size:30px'>Removed QCs</span></center>") %>%
kable_styling( stripe_color = "gray!6",
bootstrap_options = c("striped", "hover")) %>%
scroll_box(width = "700px", height = "500px")
remove_these<-c("Contaminated","-2","-1","_1","_2","- Hardware Malfunction"," ","-","_")
remove_these <- str_c(remove_these, collapse="|")
#OCP
notes_OCPPBDE$Stage<-str_remove_all(notes_OCPPBDE$Stage, remove_these)
#PCBs
notes_PCB$Stage<-str_remove_all(notes_PCB$Stage, remove_these)
#Detect Prenatal samples
T_Pre_OCP<-notes_OCPPBDE %>% filter(if_any(Stage, ~ str_detect(., "Pre")))
T_Pre_PCB<-notes_PCB %>% filter(if_any(Stage, ~ str_detect(., "Pre")))
#T2
T_2_OCP<-notes_OCPPBDE %>%
select(-c("Fraction","Lab sample ID2", "Start Drill date","End Drill date", "Lab sample ID - not normalized",
"Date of Weighing" )) %>%
filter(if_any(Stage, ~ str_detect(., "2T"))) %>%
rename_with(~ str_remove(., " Results"), everything()) %>%
mutate('Total # samples in the fraction' = n())
#T3
T_3_OCP<-notes_OCPPBDE %>%
select(-c("Fraction","Lab sample ID2", "Start Drill date","End Drill date", "Lab sample ID - not normalized",
"Date of Weighing" )) %>%
filter(if_any(Stage, ~ str_detect(., "3T"))) %>%
rename_with(~ str_remove(., " Results"), everything()) %>%
mutate('Total # samples in the fraction' = n())
T_Post_OCP<-notes_OCPPBDE %>%
select(-c("Fraction","Lab sample ID2", "Start Drill date","End Drill date", "Lab sample ID - not normalized",
"Date of Weighing" )) %>%
filter(if_any(Stage, ~ str_detect(., "Post"))) %>%
rename_with(~ str_remove(., " Results"), everything()) %>%
mutate('Total # samples in the fraction' = n())
T_Pre_OCP_0<-notes_OCPPBDE %>% filter(if_any(Stage, ~ str_detect(., "Pre")))
T_Pre_PCB_0<-notes_PCB %>% filter(if_any(Stage, ~ str_detect(., "Pre-")))
T_2_OCP %>%
kbl(
caption = "<center><span style='font-size:30px'>Drexel: Fraction T2 - OCP/PBDE</span></center>") %>%
kable_styling( stripe_color = "gray!6",
bootstrap_options = c("striped", "hover")) %>%
scroll_box(width = "1000px", height = "500px")
T_3_OCP %>%
kbl(
caption = "<center><span style='font-size:30px'>Drexel: Fraction T3 - OCP/PBDE</span></center>") %>%
kable_styling( stripe_color = "gray!6",
bootstrap_options = c("striped", "hover")) %>%
scroll_box(width = "1000px", height = "500px")
T_Post_OCP %>%
kbl(
caption = "<center><span style='font-size:30px'>Drexel: Fraction Post - OCP/PBDE</span></center>") %>%
kable_styling( stripe_color = "gray!6",
bootstrap_options = c("striped", "hover")) %>%
scroll_box(width = "1000px", height = "500px")
T_2_PCB<-notes_PCB %>%
filter(if_any(Stage, ~ str_detect(., "2T"))) %>%
rename_with(~ str_remove(., " Results"), everything())
T_3_PCB<-notes_PCB %>%
filter(if_any(Stage, ~ str_detect(., "3T"))) %>%
rename_with(~ str_remove(., " Results"), everything())
T_Post_PCB<-notes_PCB %>%
filter(if_any(Stage, ~ str_detect(., "Post"))) %>%
rename_with(~ str_remove(., " Results"), everything())
#Spiked QCs
OCPPBDE_QC_Spiked<-OCPPBDE_QC %>%
group_by(Type) %>%
filter(Type == "MatrixSpike" ) %>%
mutate(Batch_number = str_sub(`Data File`,1,5) ) %>% #keep only : 1st character until 5th character
mutate(Sample_name = str_sub(`Data File`,6) ) %>%
ungroup() %>%
group_by(`Batch_number`) %>%
mutate(`Number of samples (n) in the batch` = n()) %>%
ungroup()
OCPPBDE_QC_Spiked$Batch_number <- gsub("_", "", OCPPBDE_QC_Spiked$Batch_number) #remove "_" in Batch Number column
OCPPBDE_QC_Spiked$Sample_name<-gsub("_", "", OCPPBDE_QC_Spiked$Sample_name) # remove "_" in "Spiked Sample" column
OCPPBDE_QC_Spiked$Sample_name<-gsub(".D", "", OCPPBDE_QC_Spiked$Sample_name)
OCPPBDE_QC_Spikednotes_OCPPBDE_venn <- OCPPBDE_QC_Spiked %>% replace(is.na(.), 0)
OCPPBDE_QC_recovery<-OCPPBDE_QC_Spiked %>%
mutate((across(ends_with('Results'), ~ ./0.2*(100)))) %>%
group_by(Batch_number)
#Spiked QC recovery was calculated with target of 0.2ppm
target_recovery = (~ ./0.2*(100))
OCPPBDE_QC_recovery_mean<-OCPPBDE_QC_Spiked %>%
mutate((across(ends_with('Results'), target_recovery))) %>%
group_by(Batch_number) %>%
summarise_at(vars("HCB Results", "b-HCH Results", "Oxychlordane Results","trans-Nonachlor Results","pp-DDE-2 Results","pp-DDE Results","BDE-28 Results","pp-DDT Results","pp-DDT-2 Results","BDE-47 Results","BDE-100 Results","BDE-99 Results","BDE-153 Results","BDE-153 Results"),mean) %>%
ungroup()
OCPPBDE_QC_recovery_mean<-OCPPBDE_QC_recovery_mean[c(1,6:13,2:5),]
OCPPBDE_QC_recovery_mean_distribution<-OCPPBDE_QC_Spiked %>%
group_by(Batch_number) %>%
summarise_at(vars("HCB Results", "b-HCH Results", "Oxychlordane Results","trans-Nonachlor Results","BDE-28 Results","pp-DDT Results","pp-DDT-2 Results","BDE-47 Results","BDE-100 Results","BDE-99 Results","BDE-153 Results","BDE-153 Results"),mean) %>%
ungroup()
#Spiked QCs
OCPPBDE_QC_recovery_sd<-OCPPBDE_QC_Spiked %>%
group_by(Batch_number) %>%
summarise_at(vars("HCB Results", "b-HCH Results", "Oxychlordane Results","trans-Nonachlor Results","BDE-28 Results","pp-DDT Results","pp-DDT-2 Results","BDE-47 Results","BDE-100 Results","BDE-99 Results","BDE-153 Results","BDE-153 Results"),sd) %>%
ungroup()
OCPPBDE_QC_recovery_sd<-OCPPBDE_QC_recovery_sd[c(1,6:13,2:5),]
OCPPBDE_QC_recovery<-OCPPBDE_QC_recovery %>%
rename_with(~ str_remove(., " Results"), everything())
OCPPBDE_QC_recovery_mean<-OCPPBDE_QC_recovery_mean %>%
rename_with(~ str_remove(., " Results"), everything())
PCB_QC_Spiked<-PCB_QC %>%
group_by(Type) %>%
filter(Type == "MatrixSpike" ) %>%
mutate(Batch_number = str_sub(`Data File`,1,5) ) %>% #keep only : 1st character until 5th character
mutate(Sample_name = str_sub(`Data File`,6) ) %>%
ungroup() %>%
group_by(`Batch_number`) %>%
mutate(`Number of samples (n) in the batch` = n()) %>%
ungroup()
PCB_QC_Spiked$Batch_number <- gsub("_", "", PCB_QC_Spiked$Batch_number) #remove "_"
PCB_QC_Spiked$Sample_name<-gsub("_", "", PCB_QC_Spiked$Sample_name)
PCB_QC_Spiked$Sample_name<-gsub(".D", "", PCB_QC_Spiked$Sample_name)
PCB_QC_Spiked <- PCB_QC_Spiked %>% replace(is.na(.), 0)
PCB_QC_recovery<-PCB_QC_Spiked %>%
mutate((across(ends_with('Results'), ~ ./0.1*(100)))) %>%
group_by(Batch_number)
PCB_QC_recovery_mean<-PCB_QC_Spiked %>%
mutate((across(ends_with('Results'), ~ ./0.1*(100)))) %>%
group_by(Batch_number) %>%
summarise_at(vars(PCB_colnames),mean) %>%
ungroup()
PCB_QC_recovery_mean<-PCB_QC_recovery_mean[c(1,6:13,2:5),]
PCB_QC_recovery<-PCB_QC_recovery %>%
rename_with(~ str_remove(., " Results"), everything())
PCB_QC_recovery_mean<-PCB_QC_recovery_mean %>%
rename_with(~ str_remove(., " Results"), everything())
#Unspiked QCs
OCPPBDE_QC_Unspike<-OCPPBDE_QC %>%
group_by(Type) %>%
filter(Type == "MatrixBlank") %>%
mutate(Batch_number = str_sub(`Data File`,1,5) ) %>% #keep only : 1st character until 5th character
mutate(Sample_name = str_sub(`Data File`,6) ) %>%
mutate_all(funs(replace_na(.,0))) %>%
ungroup() %>%
group_by(`Batch_number`) %>%
mutate(`Number of samples (n) in the batch` = n()) %>%
ungroup()
OCPPBDE_QC_Unspike$Batch_number <- gsub("_", "", OCPPBDE_QC_Unspike$Batch_number) #remove "_"
OCPPBDE_QC_Unspike$Sample_name<-gsub("_", "", OCPPBDE_QC_Unspike$Sample_name)
OCPPBDE_QC_Unspike$Sample_name<-gsub(".D", "", OCPPBDE_QC_Unspike$Sample_name)
#Replace 2 samples from batch 1 as batch 2
OCPPBDE_QC_Unspike$`Data File`[OCPPBDE_QC_Unspike$`Data File` == 'DrB1_InstQC_unspikedpool_3.D'] <- 'DrB2_InstQC_unspikedpool_3.D'
OCPPBDE_QC_Unspike$`Data File`[OCPPBDE_QC_Unspike$`Data File` == 'DrB1_InstQC_unspikedpool_4.D'] <- 'DrB2_InstQC_unspikedpool_4.D'
OCPPBDE_QC_unspike_mean<-OCPPBDE_QC_Unspike %>%
group_by(Batch_number) %>%
summarise_at(vars("HCB Results", "b-HCH Results", "Oxychlordane Results","trans-Nonachlor Results","BDE-100 Results","BDE-99 Results","BDE-153 Results","BDE-153 Results"),mean) %>%
ungroup() %>%
rename_with(~ str_remove(., " Results"), everything())
PCB_QC_Unspike<-PCB_QC %>%
group_by(Type) %>%
filter(Type == "MatrixBlank") %>%
mutate(Batch_number = str_sub(`Data File`,1,5) ) %>% #keep only : 1st character until 5th character
mutate(Sample_name = str_sub(`Data File`,6) ) %>%
mutate_all(funs(replace_na(.,0))) %>%
ungroup() %>%
group_by(`Batch_number`) %>%
group_by(`Batch_number`) %>%
mutate(`Number of samples (n) in the batch` = n()) %>%
ungroup()
PCB_QC_Unspike$Batch_number <- gsub("_", "", PCB_QC_Unspike$Batch_number) #remove "_"
PCB_QC_Unspike$Sample_name<-gsub("_", "", PCB_QC_Unspike$Sample_name)
PCB_QC_Unspike$Sample_name<-gsub(".D", "", PCB_QC_Unspike$Sample_name)
#Replace 2 samples from batch 1 as batch 2
PCB_QC_Unspike$`Data File`[PCB_QC_Unspike$`Data File` == 'DrB1_InstQC_unspikedpool_3.D'] <- 'DrB2_InstQC_unspikedpool_3.D'
PCB_QC_Unspike$`Data File`[PCB_QC_Unspike$`Data File` == 'DrB1_InstQC_unspikedpool_4.D'] <- 'DrB2_InstQC_unspikedpool_4.D'
PCB_QC_unspike_mean<-PCB_QC_Unspike %>%
group_by(Batch_number) %>%
summarise_at(vars("PCB-118  Results","PCB-153 Results","PCB-138 Results","PCB-156 Results","PCB-157 Results","PCB-180 Results","PCB-170 Results"),mean) %>%
ungroup() %>%
rename_with(~ str_remove(., " Results"), everything())
#Spiked
OCPPBDE_QC_Spiked %>%
kbl(
caption = "<left><span style='font-size:30px'>OCPS: Spiked Targetted QCs</span></left>") %>%
kable_styling( stripe_color = "gray!6",
bootstrap_options = c("striped", "hover")) %>%
scroll_box(width = "800px", height = "500px")
#Spiked
PCB_QC_Spiked %>%
arrange(Batch_number) %>%
kbl(
caption = "<center><span style='font-size:30px'>PCB: Spiked Targetted QCs</span></center>") %>%
kable_styling( stripe_color = "gray!6",
bootstrap_options = c("striped", "hover")) %>%
scroll_box(width = "800px", height = "500px")
#Unspiked
OCPPBDE_QC_Unspike %>%
kbl(
caption = "<center><span style='font-size:30px'>OCP: Unspiked Targetted QCs</span></center>") %>%
kable_styling( stripe_color = "gray!6",
bootstrap_options = c("striped", "hover")) %>%
scroll_box(width = "800px", height = "500px")
#Unspiked
PCB_QC_Unspike %>%
kbl(
caption = "<center><span style='font-size:30px'>PCB: Unspiked Targetted QCs</span></center>") %>%
kable_styling( stripe_color = "gray!6",
bootstrap_options = c("striped", "hover")) %>%
scroll_box(width = "800px", height = "500px")
common_2T_list<-as.list(T_2_OCP$`Lab sample ID`)
common_3T_list<-as.list(T_3_OCP$`Lab sample ID`)
common_Post_list<-as.list(T_Post_OCP$`Lab sample ID`)
common_Pre_list<-as.list(T_Pre_OCP$`Lab sample ID`)
common_Pre_list_0<-as.list(T_Pre_OCP_0$`Lab sample ID`)
common_list_1<- list(
"2T" = common_2T_list,
"3T" = common_3T_list,
"Post Natal" = common_Post_list,
"Pre Natal" = common_Pre_list)
common_list_2<- list(
"2T" = common_2T_list,
"3T" = common_3T_list,
"Post Natal" = common_Post_list)
#With Prenatal
OCP_venn_prenatal<-ggvenn(
common_list_1,
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF", "#CD534CFF"),
stroke_size = 0.5, set_name_size = 4
)+ggtitle("Before removing Prenatal Samples") + theme(plot.title = element_text(hjust = 0.5))
#Without Prenatal
OCP_venn_no_prenatal<-ggvenn(
common_list_2,
fill_color = c("#0073C2FF", "#EFC000FF", "#868686FF", "#CD534CFF"),
stroke_size = 0.5, set_name_size = 4
) +ggtitle("After removing Prenatal Samples") + theme(plot.title = element_text(hjust = 0.5))
OCP_venn_prenatal
OCP_venn_no_prenatal
notes_OCPPBDE<-notes_OCPPBDE %>%
group_by(Stage) %>%
mutate(Batch_number = str_sub(`Extraction Label`,1,5) ) %>% #keep only : 1st character until 5th character
mutate(Sample_name = str_sub(`Extraction Label`,6) )
notes_OCPPBDE$Batch_number <- gsub("_", "", notes_OCPPBDE$Batch_number) #remove "_"
notes_OCPPBDE$Sample_name<-gsub("_", "", notes_OCPPBDE$Sample_name)
notes_OCPPBDE$Sample_name<-gsub(".D", "", notes_OCPPBDE$Sample_name)
notes_OCPPBDE%>% replace(is.na(.), 0)
notes_OCPPBDE<-notes_OCPPBDE %>%
mutate(Batch_num=str_sub(`Batch_number`,4,5))
notes_OCPPBDE$Batch_num<-as.numeric(notes_OCPPBDE$Batch_num)
notes_OCPPBDE<-notes_OCPPBDE %>%
group_by(Stage) %>%
arrange((Batch_num))
notes_OCPPBDE_batch<-data.frame(notes_OCPPBDE$Batch_num)
notes_PCB<-notes_PCB %>%
group_by(Stage) %>%
mutate(Batch_number = str_sub(`Extraction Label`,1,5) ) %>% #keep only : 1st character until 5th character
mutate(Sample_name = str_sub(`Extraction Label`,6) )
notes_PCB$Batch_number <- gsub("_", "", notes_PCB$Batch_number) #remove "_"
notes_PCB$Sample_name<-gsub("_", "", notes_PCB$Sample_name)
notes_PCB$Sample_name<-gsub(".D", "", notes_PCB$Sample_name)
notes_PCB<-notes_PCB %>%
mutate(Batch_num=str_sub(`Batch_number`,4,5))
notes_PCB$Batch_num<-as.numeric(notes_PCB$Batch_num)
notes_PCB<-notes_PCB %>%
group_by(Stage) %>%
arrange((Batch_num))
notes_PCB_batch<-data.frame(notes_PCB$Batch_num)
q<-notes_OCPPBDE %>%
select("Stage",OCP_colnames, "Batch_num") %>%
group_by("Batch_num") %>%
gather(var, value,-Stage) %>%
filter(str_detect(var,"Results"))
q$value<-as.numeric(as.character(q$value))
signif(q$value,digits = 8)
s<-notes_OCPPBDE %>%
select("Stage",OCP_colnames, "Batch_num") %>%
group_by("Batch_num") %>%
gather(var, value,-Batch_num) %>%
filter(str_detect(var,"Results"))
s$value<-as.numeric(as.character(s$value))
signif(s$value,digits = 8)
ocp_batches<-cbind(q,s)
ocp_batches <- ocp_batches[, !duplicated(colnames(ocp_batches), fromLast = TRUE)]
ocp_batches$var <- gsub("Results", "", ocp_batches$var) #remove "Results"
ocp_batches<-ocp_batches %>%
group_by(var) %>%
mutate('n (per analyte)' = n()) %>%
ungroup()
#Making colors
#monochromeR::generate_palette("#fab909", blend_colour = "#db5a05" , n_colours = 8, view_palette = TRUE)
vit_c_palette <- c("2T" = "#FEF1CD",
"3T" = "#FCD56B",
"Post"= "#EB8D07",
light_text = "#323A30",
dark_text =  "#0C1509")
#Boxplot
ocp_batches %>%
group_by(Stage, Batch_num) %>%
ggplot(aes(x = factor(Batch_num),  y = value,fill=Stage)) +
geom_boxplot( aes(alpha = value),lwd=1.25,outlier.colour="red", outlier.shape=19,
outlier.size=5)+
facet_wrap(~var, scales = "free",ncol=1)+
labs(y="Concentration [ppb]", x = "Batch number",
title =  paste0("Batch Effect Evaluation: OCP \nSample concentration grouped by analyte across all batches)"),
subtitle = paste0("n=",ocp_batches$`n (per analyte)`[1])) +
scale_fill_manual(values = vit_c_palette)+
theme(legend.key.height= unit(5, 'cm'),
legend.key.width= unit(5, 'cm'),
legend.title = element_text(size=25),
legend.text = element_text(size=25),
text = element_text(colour = vit_c_palette["light_text"],family = "Cabin"),
plot.title = element_text(colour = vit_c_palette["dark_text"], #plot title
size = rel(3.5),
face = "bold",
family = "Enriqueta",
lineheight = 1,
margin = margin(0.5, 0, 1, 0, "lines")),
plot.subtitle = element_text(size = rel(2.5), lineheight = 1.3,
margin = margin(0, 0, 1, 0, "lines")),
strip.text = element_text(family = "Enriqueta",
colour = vit_c_palette["light_text"],
size = 25, face = "bold"),
axis.text=element_text(size=25),
axis.title.y = element_text(size = 25),
axis.title.x = element_text(size = 25))
#Jitter
ocp_batches %>%
group_by(Stage, Batch_num) %>%
ggplot(aes(x = factor(Batch_num),  y = value,color=Stage)) +
geom_jitter(size=3,outlier.colour="red", outlier.shape=19,
outlier.size=5)+
facet_wrap(~var,scales = "free", ncol=2)+
labs(y="Concentration [ppb]", x = "Batch number",
title =  paste0("Batch Effect Evaluation: OCP \nSample concentration across all batches (grouped by analyte) "),
subtitle = paste0("n=",ocp_batches$`n (per analyte)`[1])) +
scale_fill_manual(values = vit_c_palette)+
theme(legend.key.height= unit(5, 'cm'),
legend.key.width= unit(5, 'cm'),
legend.title = element_text(size=25),
legend.text = element_text(size=25),
text = element_text(colour = vit_c_palette["light_text"],family = "Cabin"),
plot.title = element_text(colour = vit_c_palette["dark_text"], #plot title
size = rel(3.5),
face = "bold",
family = "Enriqueta",
lineheight = 1,
margin = margin(0.5, 0, 1, 0, "lines")),
plot.subtitle = element_text(size = rel(2.5), lineheight = 1.3,
margin = margin(0, 0, 1, 0, "lines")),
strip.text = element_text(family = "Enriqueta",
colour = vit_c_palette["light_text"],
size = 25, face = "bold"),
axis.text=element_text(size=25),
axis.title.y = element_text(size = 25),
axis.title.x = element_text(size = 25))
pcb_batches<-pcb_batches %>%
group_by(var) %>%
mutate('n (per analyte)' = n()) %>%
mutate("final concentration" = ifelse(Batch_num > 11, "reconstituted w/ 100uL hexane", "reconstituted w/ 50uL hexane")) %>%
mutate("color" = ifelse(Batch_num > 11, "#eaffd1", "#f8f3f6")) %>%
ungroup()
pcb_batches %>%
group_by(Stage, Batch_num) %>%
ggplot(aes(x = factor(Batch_num),  y = value,fill=Stage)) +
labs(y="Concentration [ppb]", x = "Batch number",
title =  paste0("Batch Effect Evaluation: PCB \nSample concentration across all batches (grouped by analyte) "),
subtitle = paste0("n=",pcb_batches$`n (per analyte)`[1])) +
scale_fill_manual(values = vit_c_palette)+
geom_rect(
aes(fill=factor("color")), alpha=0.05,
xmin=1, xmax=11, ymin=-Inf, ymax=Inf) +
geom_boxplot( aes(alpha = value),lwd=1.25,outlier.colour="red", outlier.shape=19,
outlier.size=5)
